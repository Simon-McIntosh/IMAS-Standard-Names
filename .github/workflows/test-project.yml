name: test-project

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "python-package-${{ github.ref }}"
  cancel-in-progress: true

env:
  BASE_PYTHON_VERSION: "3.12"
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/install-project
        with:
          python-version: ${{ matrix.python-version }}

      - name: Ruff format check
        uses: astral-sh/ruff-action@v3
        with:
          args: "format --check"
          version: "latest"

      - name: Test and coverage
        run: |
          if [[ "${{ matrix.python-version }}" == "${{ env.BASE_PYTHON_VERSION }}" ]]; then
            poetry run pytest \
              --cov \
              --cov-branch \
              --cov-report=xml \
              --junitxml=junit.xml -o junit_family=legacy
          else
            poetry run pytest
          fi

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1

      - name: Upload coverage reports to Codecov
        if: matrix.python-version == env.BASE_PYTHON_VERSION
        uses: codecov/codecov-action@v5
