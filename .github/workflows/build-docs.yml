name: build-docs

on:
  push:
    branches:
      - main
      - develop
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "build-docs-${{ github.ref }}"
  cancel-in-progress: true

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/install-project
        with:
          python-version: "3.12"

      - id: version 
        run: |
          if [[ ${{ github.ref_name }} =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            # Extract the major and minor version from the tag
            version=$(echo ${{ github.ref_name }} | cut -d. -f1-2)
            tagged=true
          else
            # Use the branch name as the version
            version=${{ github.ref_name }}
            tagged=false
          fi
          echo "version=$version" >> $GITHUB_OUTPUT   
          echo "tagged=$tagged" >> $GITHUB_OUTPUT     

      - name: Subtract standard names
        if: github.ref_name == 'submit' 
        run: |
          cp standardnames.yml minuend.yml
          if git ls-remote --heads origin develop | grep -q develop; then
            git fetch origin develop --depth=1
            git checkout origin/develop -- standardnames.yml
          else
            git fetch origin main --depth=1
            git checkout origin/main -- standardnames.yml
          fi
          cp standardnames.yml subtrahend.yml
          poetry run subtract_standardnames standardnames.yml minuend.yml subtrahend.yml 

      - name: Prune submit docs directory 
        if: github.ref_name == 'submit' 
        run: find docs -name "*.md" ! -name "index.md" -type f -delete

      - name: Build branch documentation
        run: |
          git fetch origin gh-pages --depth=1
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          poetry run mike deploy "${{ steps.version.outputs.version }}" --push --allow-empty --title ${{ github.ref_name }}
        env:
          SITE_URL: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}

      - name: Update mike alias 
        if: steps.version.outputs.tagged == 'true'
        run: poetry run mike alias "${{ steps.version.outputs.version }}" "latest" --update-aliases --push

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v4
        with:
          ref: gh-pages

      - uses: actions/upload-pages-artifact@v3
        with:
          path: .
          retention-days: 1

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
